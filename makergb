#!/bin/sh
# Note, we can simply use /bin/sh because these are all if-then, variables, and shell commands, there isn't any complex arithmatic.

# This is used by makergball to create and populate directories, ultimately resulting in the rgb-panel folder.

# Set errors to break looping scripts
set -e

# Dependencies:
## Folders: bin (downloaded, unzipped), colors (populated from Octave Scripts)

# How to use:
## ./makergb [red dec number] [green dec number] [blue dec number]

# Eg:
## ./makergb 5 22 254


R=$1
G=$2
B=$3

# Check dependency directories
if [ ! -d bin ]; then
echo "bin directory does not exist. Unzip bin.zip from the inkVerb/rgb repo then try again."
exit 11
fi
if [ ! -d colors ]; then
echo "colors directory does not exist. Unzip bin.zip from the inkVerb/rgb repo then try again."
exit 11
fi

# Create directories if they don't exist
if [ ! -d rgb-bin ]; then
mkdir rgb-bin
fi
if [ ! -d rgb-base ]; then
mkdir rgb-base
fi
if [ ! -d rgb-panel ]; then
mkdir rgb-panel
fi

# RGB bin basic
composite bin/G-$G.png bin/B-$B.png rgb-bin/GB-$G-$B.png
composite bin/R-$R.png rgb-bin/GB-$G-$B.png rgb-bin/RGB-bin-$R-$G-$B.png
rm rgb-bin/GB-$G-$B.png

# RGB overlay
composite rgb-bin/RGB-bin-$R-$G-$B.png bin/1-base.png rgb-base/RGB-base1-$R-$G-$B.png
composite bin/2-overlay.png rgb-base/RGB-base1-$R-$G-$B.png rgb-base/RGB-base-$R-$G-$B.png
rm rgb-base/RGB-base1-$R-$G-$B.png

# RGB final
composite rgb-base/RGB-base-$R-$G-$B.png colors/R$R-G$G-B$B.png rgb-panel/RGB-panel-$R-$G-$B.png

